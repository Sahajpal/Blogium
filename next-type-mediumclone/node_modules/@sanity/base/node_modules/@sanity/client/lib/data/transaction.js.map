{"version":3,"sources":["../../src/data/transaction.js"],"names":["assign","require","validators","Patch","defaultMutateOptions","returnDocuments","Transaction","operations","client","prototype","clone","addMutations","concat","create","doc","_create","createIfNotExists","createOrReplace","delete","documentId","validateDocumentId","_add","id","patch","patchOps","isBuilder","isPatch","serialize","Error","slice","toJSON","commit","options","mutate","reset","op","_id","validateObject","dataset","hasDataset","clientConfig","mutation","mut","module","exports"],"mappings":";;;;AAAA,IAAMA,SAASC,QAAQ,eAAR,CAAf;AACA,IAAMC,aAAaD,QAAQ,eAAR,CAAnB;AACA,IAAME,QAAQF,QAAQ,SAAR,CAAd;;AAEA,IAAMG,uBAAuB,EAACC,iBAAiB,KAAlB,EAA7B;;AAEA,SAASC,WAAT,GAA8C;AAAA,MAAzBC,UAAyB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC5C,OAAKD,UAAL,GAAkBA,UAAlB;AACA,OAAKC,MAAL,GAAcA,MAAd;AACD;;AAEDR,OAAOM,YAAYG,SAAnB,EAA8B;AAC5BC,OAD4B,mBACH;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;;AACvB,WAAO,IAAIL,WAAJ,CACL,KAAKC,UAAL,CAAgBK,MAAhB,CAAuBD,YAAvB,CADK,EAEL,KAAKH,MAFA,CAAP;AAID,GAN2B;AAQ5BK,QAR4B,kBAQrBC,GARqB,EAQhB;AACV,WAAO,KAAKC,OAAL,CAAaD,GAAb,EAAkB,QAAlB,CAAP;AACD,GAV2B;AAY5BE,mBAZ4B,6BAYVF,GAZU,EAYL;AACrB,WAAO,KAAKC,OAAL,CAAaD,GAAb,EAAkB,mBAAlB,CAAP;AACD,GAd2B;AAgB5BG,iBAhB4B,2BAgBZH,GAhBY,EAgBP;AACnB,WAAO,KAAKC,OAAL,CAAaD,GAAb,EAAkB,iBAAlB,CAAP;AACD,GAlB2B;AAoB5BI,QApB4B,mBAoBrBC,UApBqB,EAoBT;AACjBjB,eAAWkB,kBAAX,CAA8B,QAA9B,EAAwCD,UAAxC;AACA,WAAO,KAAKE,IAAL,CAAU,EAACH,QAAQ,EAACI,IAAIH,UAAL,EAAT,EAAV,CAAP;AACD,GAvB2B;AAyB5BI,OAzB4B,iBAyBtBJ,UAzBsB,EAyBVK,QAzBU,EAyBA;AAC1B,QAAMC,YAAY,OAAOD,QAAP,KAAoB,UAAtC;AACA,QAAME,UAAUP,sBAAsBhB,KAAtC;;AAEA;AACA,QAAIuB,OAAJ,EAAa;AACX,aAAO,KAAKL,IAAL,CAAU,EAACE,OAAOJ,WAAWQ,SAAX,EAAR,EAAV,CAAP;AACD;;AAED;AACA,QAAIF,SAAJ,EAAe;AACb,UAAMF,QAAQC,SAAS,IAAIrB,KAAJ,CAAUgB,UAAV,EAAsB,EAAtB,EAA0B,KAAKX,MAA/B,CAAT,CAAd;AACA,UAAI,EAAEe,iBAAiBpB,KAAnB,CAAJ,EAA+B;AAC7B,cAAM,IAAIyB,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,aAAO,KAAKP,IAAL,CAAU,EAACE,OAAOA,MAAMI,SAAN,EAAR,EAAV,CAAP;AACD;;AAED,WAAO,KAAKN,IAAL,CAAU,EAACE,OAAOvB,OAAO,EAACsB,IAAIH,UAAL,EAAP,EAAyBK,QAAzB,CAAR,EAAV,CAAP;AACD,GA7C2B;AA+C5BG,WA/C4B,uBA+ChB;AACV,WAAO,KAAKpB,UAAL,CAAgBsB,KAAhB,EAAP;AACD,GAjD2B;AAmD5BC,QAnD4B,oBAmDnB;AACP,WAAO,KAAKH,SAAL,EAAP;AACD,GArD2B;AAuD5BI,QAvD4B,kBAuDrBC,OAvDqB,EAuDZ;AACd,QAAI,CAAC,KAAKxB,MAAV,EAAkB;AAChB,YAAM,IAAIoB,KAAJ,CACJ,uEACE,4CAFE,CAAN;AAID;;AAED,WAAO,KAAKpB,MAAL,CAAYyB,MAAZ,CAAmB,KAAKN,SAAL,EAAnB,EAAqCK,WAAW5B,oBAAhD,CAAP;AACD,GAhE2B;AAkE5B8B,OAlE4B,mBAkEpB;AACN,SAAK3B,UAAL,GAAkB,EAAlB;AACA,WAAO,IAAP;AACD,GArE2B;AAuE5BQ,SAvE4B,mBAuEpBD,GAvEoB,EAuEfqB,EAvEe,EAuEX;AACf,QAAI,CAACrB,IAAIsB,GAAL,IAAY,CAAC,KAAK5B,MAAtB,EAA8B;AAC5B,YAAM,IAAIoB,KAAJ,CACJ,uFACE,uEAFE,CAAN;AAID;;AAED1B,eAAWmC,cAAX,CAA0BF,EAA1B,EAA8BrB,GAA9B;AACA,QAAMwB,UAAUpC,WAAWqC,UAAX,CAAsB,KAAK/B,MAAL,CAAYgC,YAAlC,CAAhB;AACA,QAAMC,+BAAaN,EAAb,EAAkBnC,OAAO,EAAP,EAAWc,GAAX,EAAgB,EAACsB,KAAKtB,IAAIsB,GAAJ,IAAcE,OAAd,MAAN,EAAhB,CAAlB,CAAN;AACA,WAAO,KAAKjB,IAAL,CAAUoB,QAAV,CAAP;AACD,GAnF2B;AAqF5BpB,MArF4B,gBAqFvBqB,GArFuB,EAqFlB;AACR,WAAO,KAAKhC,KAAL,CAAWgC,GAAX,CAAP;AACD;AAvF2B,CAA9B;;AA0FAC,OAAOC,OAAP,GAAiBtC,WAAjB","file":"transaction.js","sourcesContent":["const assign = require('xtend/mutable')\nconst validators = require('../validators')\nconst Patch = require('./patch')\n\nconst defaultMutateOptions = {returnDocuments: false}\n\nfunction Transaction(operations = [], client) {\n  this.operations = operations\n  this.client = client\n}\n\nassign(Transaction.prototype, {\n  clone(addMutations = []) {\n    return new Transaction(\n      this.operations.concat(addMutations),\n      this.client\n    )\n  },\n\n  create(doc) {\n    return this._create(doc, 'create')\n  },\n\n  createIfNotExists(doc) {\n    return this._create(doc, 'createIfNotExists')\n  },\n\n  createOrReplace(doc) {\n    return this._create(doc, 'createOrReplace')\n  },\n\n  delete(documentId) {\n    validators.validateDocumentId('delete', documentId)\n    return this._add({delete: {id: documentId}})\n  },\n\n  patch(documentId, patchOps) {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch = documentId instanceof Patch\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: documentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new Patch(documentId, {}, this.client))\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: assign({id: documentId}, patchOps)})\n  },\n\n  serialize() {\n    return this.operations.slice()\n  },\n\n  toJSON() {\n    return this.serialize()\n  },\n\n  commit(options) {\n    if (!this.client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the '\n        + 'transaction to a clients `mutate()` method'\n      )\n    }\n\n    return this.client.mutate(this.serialize(), options || defaultMutateOptions)\n  },\n\n  reset() {\n    this.operations = []\n    return this\n  },\n\n  _create(doc, op) {\n    if (!doc._id && !this.client) {\n      throw new Error(\n        'Document needs an _id property when transaction is create outside a client scope. '\n        + 'Pass `{_id: \"<datasetName>:\"}` to have Sanity generate an ID for you.'\n      )\n    }\n\n    validators.validateObject(op, doc)\n    const dataset = validators.hasDataset(this.client.clientConfig)\n    const mutation = {[op]: assign({}, doc, {_id: doc._id || `${dataset}/`})}\n    return this._add(mutation)\n  },\n\n  _add(mut) {\n    return this.clone(mut)\n  }\n})\n\nmodule.exports = Transaction\n"]}