{"version":3,"sources":["../../src/data/patch.js"],"names":["deepAssign","require","assign","validateObject","Patch","selection","operations","client","prototype","clone","addOps","merge","props","set","_assign","setIfMissing","replace","inc","dec","unset","Error","append","prepend","splice","serialize","getSelection","toJSON","commit","options","returnFirst","opts","returnDocuments","mutate","patch","reset","op","sel","Array","isArray","id","query","selectionOpts","join","module","exports"],"mappings":"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","file":"patch.js","sourcesContent":["const deepAssign = require('deep-assign')\nconst assign = require('xtend/mutable')\nconst validateObject = require('../validators').validateObject\n\nfunction Patch(selection, operations = {}, client = null) {\n  this.selection = selection\n  this.operations = assign({}, operations)\n  this.client = client\n}\n\nassign(Patch.prototype, {\n  clone(addOps = {}) {\n    return new Patch(\n      this.selection,\n      assign({}, this.operations, addOps),\n      this.client\n    )\n  },\n\n  merge(props) {\n    validateObject('merge', props)\n    return this.clone({merge: deepAssign(this.operations.merge || {}, props)})\n  },\n\n  set(props) {\n    return this._assign('set', props)\n  },\n\n  setIfMissing(props) {\n    return this._assign('setIfMissing', props)\n  },\n\n  replace(props) {\n    validateObject('replace', props)\n    return this.clone({replace: props})\n  },\n\n  inc(props) {\n    return this._assign('inc', props)\n  },\n\n  dec(props) {\n    return this._assign('dec', props)\n  },\n\n  // @todo implement when in gradient\n  unset(props) {\n    throw new Error('Not implemented yet')\n  },\n\n  // @todo implement when in gradient\n  append(props) {\n    throw new Error('Not implemented yet')\n  },\n\n  // @todo implement when in gradient\n  prepend(props) {\n    throw new Error('Not implemented yet')\n  },\n\n  // @todo implement when in gradient\n  splice(props) {\n    throw new Error('Not implemented yet')\n  },\n\n  serialize() {\n    return assign(getSelection(this.selection), this.operations)\n  },\n\n  toJSON() {\n    return this.serialize()\n  },\n\n  commit(options = {}) {\n    if (!this.client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the '\n        + 'patch to a clients `mutate()` method'\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = assign({returnFirst, returnDocuments: true}, options)\n    return this.client.mutate({patch: this.serialize()}, opts)\n  },\n\n  reset() {\n    return new Patch(this.selection, {}, this.client)\n  },\n\n  _assign(op, props) {\n    validateObject(op, props)\n    return this.clone({[op]: assign({}, this.operations[op] || {}, props)})\n  }\n})\n\nfunction getSelection(sel) {\n  if (typeof sel === 'string' || Array.isArray(sel)) {\n    return {id: sel}\n  }\n\n  if (sel && sel.query) {\n    return {query: sel.query}\n  }\n\n  const selectionOpts = [\n    '* Dataset-prefixed document ID (<dataset/docId>)',\n    '* Array of dataset-prefixed document IDs',\n    '* Object containing `query`'\n  ].join('\\n')\n\n  throw new Error(`Unknown selection for patch - must be one of:\\n\\n${selectionOpts}`)\n}\n\nmodule.exports = Patch\n"]}