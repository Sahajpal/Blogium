'use strict';

var assign = require('xtend/mutable');
var validators = require('../validators');

function AssetsClient(client) {
  this.client = client;
}

var ASSET_TYPES_TO_ENDPOINT = {
  image: 'images',
  file: 'files'
};

assign(AssetsClient.prototype, {
  upload: function upload(assetType, file) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    validators.validateAssetType(assetType);

    var dataset = validators.hasDataset(this.client.clientConfig);

    var customHeaders = 'contentType' in options ? { 'Content-Type': options.contentType } : {};

    var assetEndpointSegment = ASSET_TYPES_TO_ENDPOINT[assetType];

    return this.client.requestObservable({
      method: 'POST',
      headers: assign({
        Accept: 'application/json'
      }, customHeaders),
      uri: '/assets/' + assetEndpointSegment + '/' + dataset,
      body: file,
      json: false,
      timeout: 0
    }).map(function (event) {
      if (event.type !== 'response') {
        return event;
      }
      return assign({}, event, {
        body: JSON.parse(event.body)
      });
    });
  }
});

module.exports = AssetsClient;
//# sourceMappingURL=assetsClient.js.map