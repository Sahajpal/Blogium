'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createUserStore;

var _SanityStoreObservable = require('../utils/SanityStoreObservable');

var _SanityStoreObservable2 = _interopRequireDefault(_SanityStoreObservable);

var _createActions = require('../utils/createActions');

var _createActions2 = _interopRequireDefault(_createActions);

var _pubsubber = require('../utils/pubsubber');

var _pubsubber2 = _interopRequireDefault(_pubsubber);

var _authenticationFetcher = require('part:@sanity/base/authentication-fetcher');

var _authenticationFetcher2 = _interopRequireDefault(_authenticationFetcher);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var userChannel = (0, _pubsubber2.default)();

var _currentUser = null;

userChannel.subscribe(function (val) {
  _currentUser = val;
});

function refreshUser() {
  return _authenticationFetcher2.default.getCurrentUser().then(function (user) {
    userChannel.publish(user);
    return user;
  });
}

// Set initial value for user
refreshUser();

function logout() {
  return _authenticationFetcher2.default.logout().then(function () {
    userChannel.publish(null);
  });
}

var currentUser = new _SanityStoreObservable2.default(function (observer) {

  emitUser('snapshot', _currentUser);

  return userChannel.subscribe(function (nextUser) {
    emitUser('change', nextUser);
  });

  function emitUser(type, user) {
    observer.next({
      type: type,
      user: user
    });
  }
});

function createUserStore() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return {
    actions: (0, _createActions2.default)({
      logout: logout
    }),
    currentUser: currentUser
  };
}